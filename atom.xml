<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Honoz的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-03-21T05:10:43.449Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Honoz</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>配置M5Stick并编译StickWatch项目</title>
    <link href="http://yoursite.com/2020/03/21/%E9%85%8D%E7%BD%AEM5Stick%E5%B9%B6%E7%BC%96%E8%AF%91StickWatch%E9%A1%B9%E7%9B%AE/"/>
    <id>http://yoursite.com/2020/03/21/%E9%85%8D%E7%BD%AEM5Stick%E5%B9%B6%E7%BC%96%E8%AF%91StickWatch%E9%A1%B9%E7%9B%AE/</id>
    <published>2020-03-20T16:00:00.000Z</published>
    <updated>2020-03-21T05:10:43.449Z</updated>
    
    <content type="html"><![CDATA[<img src="https://honoz.github.io/images/photo/M5Stick.png"><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><p>1.安装usb串口驱动程序</p><p>2.安装ESP32开发板</p><p>3.安装M5Stack库</p><p>4.安装U8g2库</p><p>5.安装WiFi库</p><p>6.安装ArduinoJson库(6.2.0-beta as local dependancy)</p><p>7.配置Arduino IDE</p><p>8.编译StickWatch项目</p><h2 id="1-安装将usb驱动程序"><a href="#1-安装将usb驱动程序" class="headerlink" title="1.安装将usb驱动程序"></a>1.安装将usb驱动程序</h2><p>1.单击右边的链接下载CP210X驱动程序<img src="https://honoz.github.io/images/photo/win.png"><a href="https://honoz.github.io/CP210x_VCP_Windows.zip" target="_blank" rel="noopener">Windows</a></p><p>2.根据Windows操作系统类型，选择相应的驱动程序安装包</p><p>32位CP210xVCPInstaller_x86_vx.x.x.x.exe</p><p>64位CP210xVCPInstaller_x64_vx.x.x.x.exe</p><img src="https://honoz.github.io/images/photo/13.png"><p>3.双击要安装的可执行文件</p><p><img src="https://honoz.github.io/images/photo/14.png"> <img src="https://honoz.github.io/images/photo/15.png"></p><p>4.查看端口号COMx</p><p>查看已标识的com端口列表Windows设备管理器：</p><p>通过USB-C型电缆将核心连接到计算机上，打开Windows设备管理器，单击端口(COM &amp; LPT)如果你看到这个SiLicon Labs CP210x USB to UART Bridge(COMx)，这意味着驱动程序安装成功，并且允许您的PC与M5通信。</p><img src="https://honoz.github.io/images/photo/16.png"><h2 id="2-安装ESP32开发板"><a href="#2-安装ESP32开发板" class="headerlink" title="2.安装ESP32开发板"></a>2.安装ESP32开发板</h2><p>1.打开Arduino IDE，导航到文件-&gt;首选项-&gt;设置</p><img src="https://honoz.github.io/images/photo/17.png"><img src="https://honoz.github.io/images/photo/18.png"><p>2.将下列ESP32开发板网址复制至附加开发板管理器网址:点击确定</p><p>ESP32开发板管理器网址：<a href="https://dl.espressif.com/dl/package_esp32_index.json" target="_blank" rel="noopener">https://dl.espressif.com/dl/package_esp32_index.json</a></p><img src="https://honoz.github.io/images/photo/19.png"><p>3.导航到工具-&gt;开发板:-&gt;开发板管理器…</p><img src="https://honoz.github.io/images/photo/20.png"><p>4.在开发板管理器窗口搜索ESP32，找到它并单击安装</p><img src="https://honoz.github.io/images/photo/21.png"><h2 id="3-安装M5Stack库"><a href="#3-安装M5Stack库" class="headerlink" title="3.安装M5Stack库"></a>3.安装M5Stack库</h2><p>1.打开Arduino IDE，然后选择项目-&gt;加载库-&gt;管理库…</p><img src="https://honoz.github.io/images/photo/22.png"><p>2.搜索M5Stack，找到它，然后点击安装</p><img src="https://honoz.github.io/images/photo/23.png"><h2 id="4-安装U8g2库"><a href="#4-安装U8g2库" class="headerlink" title="4.安装U8g2库"></a>4.安装U8g2库</h2><p>1.打开Arduino IDE，并导航到项目-&gt;加载库-&gt;管理库…，搜索U8g2安装这个库</p><img src="https://honoz.github.io/images/photo/24.png"><h2 id="5-安装WiFi库"><a href="#5-安装WiFi库" class="headerlink" title="5.安装WiFi库"></a>5.安装WiFi库</h2><p>1.打开Arduino IDE，并导航到项目-&gt;加载库-&gt;管理库…，搜索WiFi安装这个库</p><img src="https://honoz.github.io/images/photo/25.png"><h2 id="6-安装ArduinoJson库-6-2-0-beta-as-local-dependancy"><a href="#6-安装ArduinoJson库-6-2-0-beta-as-local-dependancy" class="headerlink" title="6.安装ArduinoJson库(6.2.0-beta as local dependancy)"></a>6.安装ArduinoJson库(6.2.0-beta as local dependancy)</h2><p>1.打开Arduino IDE，并导航到项目-&gt;加载库-&gt;管理库…，搜索ArduinoJson安装这个库</p><img src="https://honoz.github.io/images/photo/26.png"><h2 id="7-配置Arduino-IDE"><a href="#7-配置Arduino-IDE" class="headerlink" title="7.配置Arduino IDE"></a>7.配置Arduino IDE</h2><p>1.选择正确的开发板名和串行设备名称</p><p>选择工具-&gt;开发板-&gt;M5Stack-Core-ESP32</p><p>选择正确的端口号工具-&gt;端口：-&gt;COMx</p><p>为了避免项目过大，请将Partition Scheme设置成Large App No OTA，选择工具-&gt;Partition Scheme-&gt;Large App No OTA</p><img src="https://honoz.github.io/images/photo/27.png"><h2 id="8-编译StickWatch项目"><a href="#8-编译StickWatch项目" class="headerlink" title="8.编译StickWatch项目"></a>8.编译StickWatch项目</h2><p>1.下载由eggfly编写的M5Sick智能手表项目——<a href="https://github.com/eggfly/StickWatch" target="_blank" rel="noopener">StickWatch</a></p><img src="https://honoz.github.io/images/photo/28.png"><p>2.解压项目后用Arduino IDE打开，找到StickWatch文件夹选择StickWatch.ino文件打开</p><img src="https://honoz.github.io/images/photo/29.png"><p>3.配置Wifi</p><p>为了能正常显示时间，需要配置 WIFI</p><p>打开 config.h 文件，修改第5、6行，修改成你的wifi账号和密码</p><img src="https://honoz.github.io/images/photo/30.png"><p>4.编译StickWatch项目并上传到M5Stick</p><p>先保存一下，在选择上传就能将项目编译到M5Stick</p><img src="https://honoz.github.io/images/photo/31.png"><img src="https://honoz.github.io/images/photo/32.jpg">]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;https://honoz.github.io/images/photo/M5Stick.png&quot;&gt;

&lt;h2 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h2&gt;&lt;p&gt;1.安装usb串
      
    
    </summary>
    
    
      <category term="开发" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="M5Stick" scheme="http://yoursite.com/tags/M5Stick/"/>
    
  </entry>
  
  <entry>
    <title>Arduino for esp8266安装方法</title>
    <link href="http://yoursite.com/2020/03/19/Arduino-for-esp8266%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2020/03/19/Arduino-for-esp8266%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95/</id>
    <published>2020-03-18T16:00:00.000Z</published>
    <updated>2020-03-21T01:24:27.675Z</updated>
    
    <content type="html"><![CDATA[<p>1、解压“Arduino 1.6.5安装包”<img src="https://honoz.github.io/images/photo/1.png">点击安装包内<img src="https://honoz.github.io/images/photo/2.png">图标进行安装Arduino 1.6.5。<br>2、装完后桌面会有一个这样<img src="images/photo/3.png">一个Arduino的快捷图标。<br>3、然后打开Arduino，选择“文件”-&gt;“首选项”，在“附加开发板管理器网址”<img src="https://honoz.github.io/images/photo/4.png">中复制这个地址：<a href="http://arduino.esp8266.com/stable/package_esp8266com_index.json" target="_blank" rel="noopener">http://arduino.esp8266.com/stable/package_esp8266com_index.json</a> ，然后点击确定保存这个地址。<br><img src="https://honoz.github.io/images/photo/5.png"><br>4、打开：工具-&gt;开发板-&gt;开发板管理器<br><img src="https://honoz.github.io/images/photo/6.png"><br>5、等待开发板管理器启动完成后，移动到开发板管理器的最下方，可以看到一个esp8266 by esp8266 Community，右下角有个选择版本，选好2.3.0之后点击安装，因为是连接到github上下载。<br><img src="https://honoz.github.io/images/photo/7.png"><br>6、下载完成之后可以在“工具”-&gt;“开发板”选项中看到ESP8266 Module，一般开发就是用Generic ESP8266 Module就行了其它的设置默认。有的板的Flash大小会有差别，具体可以查找板上的Flash芯片型号确定。如果找不到芯片型号可以用例程中的ESP8266-&gt;CheckFlashConfig来确定。<br><img src="https://honoz.github.io/images/photo/8.png"><br>7、这样子就算是配置完成了，由于本身就是直接烧写ESP8266的Flash，所以并不需要烧写bootloader。<br>8.注意：USB转232进行对ESP8266串口烧写程序要设置”COM“号，设置方法：”工具-&gt;“端口”-&gt;选择对应的串口号。ESP8266其他设置不用修改。<br><img src="https://honoz.github.io/images/photo/9.png"><br>9、软件设置好后，将资料包的<img src="https://honoz.github.io/images/photo/10.png">库文件夹替换你安装Arduino1.6.5软件下的库文件夹。不然程序不能编译通过，库文件不全造成。<br><img src="https://honoz.github.io/images/photo/11.png"><br>10、程序的烧写方法：<br><img src="https://honoz.github.io/images/photo/12.png"><br>A.先找到开发板上面两个按键开关，一个是“RESET”复位，一个是“FLASH”。<br>B.开发板连接要串口后，按住“FLASH”按键不放，再按一下“复位”按键，ESP8266模块上的蓝色指示灯会闪烁，证明复位成功。<br>C.松开“RESET”复位按键，此时“FLASH”一直按住，点击Arduino界面的“上传”上传成功 程序烧录完成。松开“FLASH”按键。<br>D.如果烧写过程中失败 那么可能是“FLASH”按键没有一直按住，那么可能开发板没有复位成功。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、解压“Arduino 1.6.5安装包”&lt;img src=&quot;https://honoz.github.io/images/photo/1.png&quot;&gt;点击安装包内&lt;img src=&quot;https://honoz.github.io/images/photo/2.png&quot;&gt;图
      
    
    </summary>
    
    
      <category term="开发" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="ESP8266" scheme="http://yoursite.com/tags/ESP8266/"/>
    
  </entry>
  
  <entry>
    <title>nas服务器搭建（迅雷远程下载）</title>
    <link href="http://yoursite.com/2018/11/19/nas%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/"/>
    <id>http://yoursite.com/2018/11/19/nas%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/</id>
    <published>2018-11-18T16:00:00.000Z</published>
    <updated>2020-03-21T01:57:39.850Z</updated>
    
    <content type="html"><![CDATA[<h2 id="迅雷远程服务搭建"><a href="#迅雷远程服务搭建" class="headerlink" title="迅雷远程服务搭建"></a>迅雷远程服务搭建</h2><p>主要功能：</p><p>1、迅雷远程下载，可以通过手机端电脑端远程下载文件，实现免费的离线下载。</p><p>2、文件共享，通过SAMBA 实现电脑，手机，服务器上文件共享功能。</p><h3 id="挂载磁盘"><a href="#挂载磁盘" class="headerlink" title="挂载磁盘"></a>挂载磁盘</h3><p>安装所需软件包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install fuse-utils ntfs-3g</span><br></pre></td></tr></table></figure><p>这里我们要设置成开机自动挂载</p><p>完成此设置后，可以在插入USB设备时，自动将设备挂载到一个本地目录下。</p><h3 id="配置自动挂载"><a href="#配置自动挂载" class="headerlink" title="配置自动挂载"></a>配置自动挂载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo nano /etc/udev/rules.d/10-usbstorage.rules</span><br></pre></td></tr></table></figure><p>将下面一段话复制粘贴保存退出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ KERNEL!=<span class="string">"sd*"</span>,GOTO=<span class="string">"media_by_label_auto_mount_end"</span></span><br><span class="line"></span><br><span class="line">SUBSYSTEM!=<span class="string">"block"</span>,GOTO=<span class="string">"media_by_label_auto_mount_end"</span></span><br><span class="line"></span><br><span class="line">IMPORT&#123;program&#125;=<span class="string">"/sbin/blkid -o udev -p %N"</span></span><br><span class="line"></span><br><span class="line">ENV&#123;ID_FS_TYPE&#125;==<span class="string">""</span>, GOTO=<span class="string">"media_by_label_auto_mount_end"</span></span><br><span class="line"></span><br><span class="line">ENV&#123;ID_FS_LABEL&#125;!=<span class="string">""</span>, ENV&#123;dir_name&#125;=<span class="string">"%E&#123;ID_FS_LABEL&#125;"</span></span><br><span class="line"></span><br><span class="line">ENV&#123;ID_FS_LABEL&#125;==<span class="string">""</span>,ENV&#123;dir_name&#125;=<span class="string">"Untitled-%k"</span></span><br><span class="line"></span><br><span class="line">ACTION==<span class="string">"add"</span>,ENV&#123;mount_options&#125;=<span class="string">"relatime,sync"</span></span><br><span class="line"></span><br><span class="line">ACTION==<span class="string">"add"</span>, ENV&#123;ID_FS_TYPE&#125;==<span class="string">"vfat"</span>,ENV&#123;mount_options&#125;=<span class="string">"iocharset=utf8,umask=000"</span></span><br><span class="line"></span><br><span class="line">ACTION==<span class="string">"add"</span>, ENV&#123;ID_FS_TYPE&#125;==<span class="string">"ntfs"</span>,ENV&#123;mount_options&#125;=<span class="string">"iocharset=utf8,umask=000"</span></span><br><span class="line"></span><br><span class="line">ACTION==<span class="string">"add"</span>, RUN+=<span class="string">"/bin/mkdir -p/media/%E&#123;dir_name&#125;"</span>, RUN+=<span class="string">"/bin/mount -o <span class="variable">$env</span>&#123;mount_options&#125; /dev/%k/media/%E&#123;dir_name&#125;"</span></span><br><span class="line"></span><br><span class="line">ACTION==<span class="string">"remove"</span>, ENV&#123;dir_name&#125;!=<span class="string">""</span>,RUN+=<span class="string">"/bin/umount -l /media/%E&#123;dir_name&#125;"</span>, RUN+=<span class="string">"/bin/rmdir/media/%E&#123;dir_name&#125;"</span></span><br><span class="line"></span><br><span class="line">LABEL=<span class="string">"media_by_label_auto_mount_end"</span></span><br></pre></td></tr></table></figure><p>再次插入usb存储设备，它会自动挂载到/media目录下，并且支持utf8格式的中文文件名。</p><p>例如，我的U盘名称为TB，插入后可以在/media/TB访问我的U盘文件。</p><h3 id="安装迅雷程序"><a href="#安装迅雷程序" class="headerlink" title="安装迅雷程序"></a>安装迅雷程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://www.openwrtdl.com/wordpress/wp-content/uploads/2016/03/Xware1.0.31_armel_v5te_glibc.zip</span><br></pre></td></tr></table></figure><p>ls   查看压缩文件</p><p>unzip加上压缩文件名</p><p>现在要做的就是在网上注册一个迅雷远程账号：<a href="http://yuancheng.xunlei.com/" target="_blank" rel="noopener">http://yuancheng.xunlei.com/</a></p><p>输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./portal</span><br></pre></td></tr></table></figure><p>启动迅雷，将THE ACTIVE CODE IS:后面的字母或数字复制</p><p>粘贴到迅雷激活码处</p><h3 id="配置迅雷开机自启"><a href="#配置迅雷开机自启" class="headerlink" title="配置迅雷开机自启"></a>配置迅雷开机自启</h3><p>配置自启动文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nano /etc/rc.local</span><br></pre></td></tr></table></figure><p>在exit0之前添加以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo /root/portal</span><br></pre></td></tr></table></figure><p>保存退出。这样迅雷远程下载就实现功能了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;迅雷远程服务搭建&quot;&gt;&lt;a href=&quot;#迅雷远程服务搭建&quot; class=&quot;headerlink&quot; title=&quot;迅雷远程服务搭建&quot;&gt;&lt;/a&gt;迅雷远程服务搭建&lt;/h2&gt;&lt;p&gt;主要功能：&lt;/p&gt;
&lt;p&gt;1、迅雷远程下载，可以通过手机端电脑端远程下载文件，实现免费的离线
      
    
    </summary>
    
    
      <category term="开发" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="程序员" scheme="http://yoursite.com/tags/%E7%A8%8B%E5%BA%8F%E5%91%98/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/10/12/hello-world/"/>
    <id>http://yoursite.com/2018/10/12/hello-world/</id>
    <published>2018-10-11T16:00:00.000Z</published>
    <updated>2020-03-21T05:10:22.546Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
