{"meta":{"title":"Honoz的博客","subtitle":"","description":"","author":"Honoz","url":"http://yoursite.com","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2018-11-19T04:52:32.389Z","updated":"2018-11-18T12:49:03.607Z","comments":false,"path":"/404.html","permalink":"http://yoursite.com/404.html","excerpt":"","text":""},{"title":"关于","date":"2020-03-17T04:48:23.119Z","updated":"2020-03-17T04:48:23.119Z","comments":false,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"12345678姓名：Honoz专业：Android工程师经验：2年地址：广东省广州市教育：本科GitHub：https://github.com/honoz博客：https://honoz.github.io描述：致力于Android开发与UI设计"},{"title":"书单","date":"2018-11-19T04:52:39.815Z","updated":"2018-11-18T12:49:03.614Z","comments":false,"path":"books/index.html","permalink":"http://yoursite.com/books/index.html","excerpt":"","text":""},{"title":"分类","date":"2018-11-19T04:52:17.101Z","updated":"2018-11-18T12:49:03.616Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-11-19T04:52:25.711Z","updated":"2018-11-18T12:49:03.622Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2018-11-19T04:52:20.684Z","updated":"2018-11-18T12:49:03.617Z","comments":true,"path":"links/index.html","permalink":"http://yoursite.com/links/index.html","excerpt":"","text":""},{"title":"项目","date":"2018-11-19T04:58:05.057Z","updated":"2018-11-19T04:58:05.057Z","comments":false,"path":"repository/index.html","permalink":"http://yoursite.com/repository/index.html","excerpt":"","text":""}],"posts":[{"title":"配置M5Stick并编译StickWatch项目","slug":"配置M5Stick并编译StickWatch项目","date":"2020-03-20T16:00:00.000Z","updated":"2020-03-21T05:10:43.449Z","comments":true,"path":"2020/03/21/配置M5Stick并编译StickWatch项目/","link":"","permalink":"http://yoursite.com/2020/03/21/%E9%85%8D%E7%BD%AEM5Stick%E5%B9%B6%E7%BC%96%E8%AF%91StickWatch%E9%A1%B9%E7%9B%AE/","excerpt":"","text":"目录1.安装usb串口驱动程序 2.安装ESP32开发板 3.安装M5Stack库 4.安装U8g2库 5.安装WiFi库 6.安装ArduinoJson库(6.2.0-beta as local dependancy) 7.配置Arduino IDE 8.编译StickWatch项目 1.安装将usb驱动程序1.单击右边的链接下载CP210X驱动程序Windows 2.根据Windows操作系统类型，选择相应的驱动程序安装包 32位CP210xVCPInstaller_x86_vx.x.x.x.exe 64位CP210xVCPInstaller_x64_vx.x.x.x.exe 3.双击要安装的可执行文件 4.查看端口号COMx 查看已标识的com端口列表Windows设备管理器： 通过USB-C型电缆将核心连接到计算机上，打开Windows设备管理器，单击端口(COM &amp; LPT)如果你看到这个SiLicon Labs CP210x USB to UART Bridge(COMx)，这意味着驱动程序安装成功，并且允许您的PC与M5通信。 2.安装ESP32开发板1.打开Arduino IDE，导航到文件-&gt;首选项-&gt;设置 2.将下列ESP32开发板网址复制至附加开发板管理器网址:点击确定 ESP32开发板管理器网址：https://dl.espressif.com/dl/package_esp32_index.json 3.导航到工具-&gt;开发板:-&gt;开发板管理器… 4.在开发板管理器窗口搜索ESP32，找到它并单击安装 3.安装M5Stack库1.打开Arduino IDE，然后选择项目-&gt;加载库-&gt;管理库… 2.搜索M5Stack，找到它，然后点击安装 4.安装U8g2库1.打开Arduino IDE，并导航到项目-&gt;加载库-&gt;管理库…，搜索U8g2安装这个库 5.安装WiFi库1.打开Arduino IDE，并导航到项目-&gt;加载库-&gt;管理库…，搜索WiFi安装这个库 6.安装ArduinoJson库(6.2.0-beta as local dependancy)1.打开Arduino IDE，并导航到项目-&gt;加载库-&gt;管理库…，搜索ArduinoJson安装这个库 7.配置Arduino IDE1.选择正确的开发板名和串行设备名称 选择工具-&gt;开发板-&gt;M5Stack-Core-ESP32 选择正确的端口号工具-&gt;端口：-&gt;COMx 为了避免项目过大，请将Partition Scheme设置成Large App No OTA，选择工具-&gt;Partition Scheme-&gt;Large App No OTA 8.编译StickWatch项目1.下载由eggfly编写的M5Sick智能手表项目——StickWatch 2.解压项目后用Arduino IDE打开，找到StickWatch文件夹选择StickWatch.ino文件打开 3.配置Wifi 为了能正常显示时间，需要配置 WIFI 打开 config.h 文件，修改第5、6行，修改成你的wifi账号和密码 4.编译StickWatch项目并上传到M5Stick 先保存一下，在选择上传就能将项目编译到M5Stick","categories":[{"name":"开发","slug":"开发","permalink":"http://yoursite.com/categories/%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"M5Stick","slug":"M5Stick","permalink":"http://yoursite.com/tags/M5Stick/"}]},{"title":"Arduino for esp8266安装方法","slug":"Arduino-for-esp8266安装方法","date":"2020-03-18T16:00:00.000Z","updated":"2020-03-21T01:24:27.675Z","comments":true,"path":"2020/03/19/Arduino-for-esp8266安装方法/","link":"","permalink":"http://yoursite.com/2020/03/19/Arduino-for-esp8266%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95/","excerpt":"","text":"1、解压“Arduino 1.6.5安装包”点击安装包内图标进行安装Arduino 1.6.5。2、装完后桌面会有一个这样一个Arduino的快捷图标。3、然后打开Arduino，选择“文件”-&gt;“首选项”，在“附加开发板管理器网址”中复制这个地址：http://arduino.esp8266.com/stable/package_esp8266com_index.json ，然后点击确定保存这个地址。4、打开：工具-&gt;开发板-&gt;开发板管理器5、等待开发板管理器启动完成后，移动到开发板管理器的最下方，可以看到一个esp8266 by esp8266 Community，右下角有个选择版本，选好2.3.0之后点击安装，因为是连接到github上下载。6、下载完成之后可以在“工具”-&gt;“开发板”选项中看到ESP8266 Module，一般开发就是用Generic ESP8266 Module就行了其它的设置默认。有的板的Flash大小会有差别，具体可以查找板上的Flash芯片型号确定。如果找不到芯片型号可以用例程中的ESP8266-&gt;CheckFlashConfig来确定。7、这样子就算是配置完成了，由于本身就是直接烧写ESP8266的Flash，所以并不需要烧写bootloader。8.注意：USB转232进行对ESP8266串口烧写程序要设置”COM“号，设置方法：”工具-&gt;“端口”-&gt;选择对应的串口号。ESP8266其他设置不用修改。9、软件设置好后，将资料包的库文件夹替换你安装Arduino1.6.5软件下的库文件夹。不然程序不能编译通过，库文件不全造成。10、程序的烧写方法：A.先找到开发板上面两个按键开关，一个是“RESET”复位，一个是“FLASH”。B.开发板连接要串口后，按住“FLASH”按键不放，再按一下“复位”按键，ESP8266模块上的蓝色指示灯会闪烁，证明复位成功。C.松开“RESET”复位按键，此时“FLASH”一直按住，点击Arduino界面的“上传”上传成功 程序烧录完成。松开“FLASH”按键。D.如果烧写过程中失败 那么可能是“FLASH”按键没有一直按住，那么可能开发板没有复位成功。","categories":[{"name":"开发","slug":"开发","permalink":"http://yoursite.com/categories/%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"ESP8266","slug":"ESP8266","permalink":"http://yoursite.com/tags/ESP8266/"}]},{"title":"nas服务器搭建（迅雷远程下载）","slug":"nas服务器搭建","date":"2018-11-18T16:00:00.000Z","updated":"2020-03-21T01:57:39.850Z","comments":true,"path":"2018/11/19/nas服务器搭建/","link":"","permalink":"http://yoursite.com/2018/11/19/nas%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/","excerpt":"","text":"迅雷远程服务搭建主要功能： 1、迅雷远程下载，可以通过手机端电脑端远程下载文件，实现免费的离线下载。 2、文件共享，通过SAMBA 实现电脑，手机，服务器上文件共享功能。 挂载磁盘安装所需软件包 1$ sudo apt-get install fuse-utils ntfs-3g 这里我们要设置成开机自动挂载 完成此设置后，可以在插入USB设备时，自动将设备挂载到一个本地目录下。 配置自动挂载1$ sudo nano /etc/udev/rules.d/10-usbstorage.rules 将下面一段话复制粘贴保存退出 1234567891011121314151617181920212223$ KERNEL!=\"sd*\",GOTO=\"media_by_label_auto_mount_end\"SUBSYSTEM!=\"block\",GOTO=\"media_by_label_auto_mount_end\"IMPORT&#123;program&#125;=\"/sbin/blkid -o udev -p %N\"ENV&#123;ID_FS_TYPE&#125;==\"\", GOTO=\"media_by_label_auto_mount_end\"ENV&#123;ID_FS_LABEL&#125;!=\"\", ENV&#123;dir_name&#125;=\"%E&#123;ID_FS_LABEL&#125;\"ENV&#123;ID_FS_LABEL&#125;==\"\",ENV&#123;dir_name&#125;=\"Untitled-%k\"ACTION==\"add\",ENV&#123;mount_options&#125;=\"relatime,sync\"ACTION==\"add\", ENV&#123;ID_FS_TYPE&#125;==\"vfat\",ENV&#123;mount_options&#125;=\"iocharset=utf8,umask=000\"ACTION==\"add\", ENV&#123;ID_FS_TYPE&#125;==\"ntfs\",ENV&#123;mount_options&#125;=\"iocharset=utf8,umask=000\"ACTION==\"add\", RUN+=\"/bin/mkdir -p/media/%E&#123;dir_name&#125;\", RUN+=\"/bin/mount -o $env&#123;mount_options&#125; /dev/%k/media/%E&#123;dir_name&#125;\"ACTION==\"remove\", ENV&#123;dir_name&#125;!=\"\",RUN+=\"/bin/umount -l /media/%E&#123;dir_name&#125;\", RUN+=\"/bin/rmdir/media/%E&#123;dir_name&#125;\"LABEL=\"media_by_label_auto_mount_end\" 再次插入usb存储设备，它会自动挂载到/media目录下，并且支持utf8格式的中文文件名。 例如，我的U盘名称为TB，插入后可以在/media/TB访问我的U盘文件。 安装迅雷程序1$ wget http://www.openwrtdl.com/wordpress/wp-content/uploads/2016/03/Xware1.0.31_armel_v5te_glibc.zip ls 查看压缩文件 unzip加上压缩文件名 现在要做的就是在网上注册一个迅雷远程账号：http://yuancheng.xunlei.com/ 输入 1$ ./portal 启动迅雷，将THE ACTIVE CODE IS:后面的字母或数字复制 粘贴到迅雷激活码处 配置迅雷开机自启配置自启动文件 1$ nano /etc/rc.local 在exit0之前添加以下命令 1$ sudo /root/portal 保存退出。这样迅雷远程下载就实现功能了","categories":[{"name":"开发","slug":"开发","permalink":"http://yoursite.com/categories/%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"程序员","slug":"程序员","permalink":"http://yoursite.com/tags/%E7%A8%8B%E5%BA%8F%E5%91%98/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-10-11T16:00:00.000Z","updated":"2020-03-21T05:10:22.546Z","comments":true,"path":"2018/10/12/hello-world/","link":"","permalink":"http://yoursite.com/2018/10/12/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}